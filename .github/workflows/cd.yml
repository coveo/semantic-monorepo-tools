name: CD
on:
  push:
    branches: [main]

concurrency:
  group: Release
  cancel-in-progress: true

jobs:
  CD:
    runs-on: ubuntu-latest
    environment: Release
    name: CD
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/lint
      - name: Snyk Monitor
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npx snyk monitor
      - name: Snyk Test
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npx snyk test --dev --sarif-file-output=./sarifs/snyk.sarif
      - name: Snyk Code
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npx snyk code test    --dev --sarif > ./sarifs/snyk-code.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@0e9acb6e5cd338179ea69a99146ca55f796799e0 # tag=v1
        with:
          sarif_file: ./sarifs
      - name: Check SnykCode vuln
        continue-on-error: false
        if: ${{ inputs.fail-on-vuln }}
        run: node ./scripts/get-scan-results.js
        with:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          fail-on-vuln: true
      - uses: ./.github/actions/build
      - uses: ./.github/actions/publish
        env:
          RELEASER_APP_ID: ${{ secrets.RELEASER_APP_ID }}
          RELEASER_PRIVATE_KEY: ${{ secrets.RELEASER_PRIVATE_KEY }}
          RELEASER_CLIENT_ID: ${{ secrets.RELEASER_CLIENT_ID }}
          RELEASER_CLIENT_SECRET: ${{ secrets.RELEASER_CLIENT_SECRET }}
          RELEASER_INSTALLATION_ID: ${{ secrets.RELEASER_INSTALLATION_ID }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEBUG: "*"
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
